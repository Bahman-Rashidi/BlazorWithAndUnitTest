@using Microsoft.AspNetCore.Components.Authorization


@inject IAuthService AuthService
@inject CustomAuthStateProvider AuthStateProvider


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Yami33</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="account/Login">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> login
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="LeBlazor/ParentComponent">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> ParentComponent
            </NavLink>
        </div>


        <AuthorizeView Roles="Admin">
            <NavLink href="product" class="nav-link">
                <span class="oi oi-lock" aria-hidden="true"></span> Admin product
            </NavLink>
        </AuthorizeView>

    </nav>
</div>

@code {




    private bool _navBarVisible;
    protected override async Task OnInitializedAsync()
    {
      //  _navBarVisible = await ShowNavBar();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
       // _navBarVisible = await ShowNavBar();
    }


    private async Task<bool> ShowNavBar()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var authenticated = user.Identity is not null && user.Identity.IsAuthenticated;

        if (!authenticated)
        {
            return true;
        }

        //Navbar should not be displayed to admin user
        // if (!user.IsInRole(SD.Role_Admin))
        // {
        //     return true;
        // }
        return false;
    }

}